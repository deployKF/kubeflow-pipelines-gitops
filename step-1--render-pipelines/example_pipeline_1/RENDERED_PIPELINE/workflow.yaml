apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: pipeline-1-
  annotations: {pipelines.kubeflow.org/kfp_sdk_version: 1.8.22, pipelines.kubeflow.org/pipeline_compilation_time: '2023-07-30T18:25:17.516227',
    pipelines.kubeflow.org/pipeline_spec: '{"description": "pipeline_1 description",
      "inputs": [{"name": "input_text", "type": "String"}], "name": "pipeline_1"}'}
  labels: {pipelines.kubeflow.org/kfp_sdk_version: 1.8.22}
spec:
  entrypoint: pipeline-1
  templates:
  - name: example-component
    container:
      args:
      - --message
      - |-
        current_utc_epoch: {{inputs.parameters.step-0-func-utc_epoch}}
        day_of_week: {{inputs.parameters.step-0-func-day_of_week}}
        custom_message: {{inputs.parameters.input_text}}
      command:
      - python
      - -c
      - |
        import argparse

        # Parse the arguments
        _parser = argparse.ArgumentParser(prog="Example Component", description="")
        _parser.add_argument("--message", dest="message", type=str, required=True)
        _parsed_args = vars(_parser.parse_args())

        # Print the message
        print(_parsed_args["message"])
      image: python:3.10
    inputs:
      parameters:
      - {name: input_text}
      - {name: step-0-func-day_of_week}
      - {name: step-0-func-utc_epoch}
    metadata:
      annotations: {pipelines.kubeflow.org/task_display_name: 'STEP 2: Print Message
          (YAML Component)', pipelines.kubeflow.org/component_spec: '{"description":
          "an example Kubeflow Pipelines V1 component", "implementation": {"container":
          {"args": ["--message", {"inputValue": "message"}], "command": ["python",
          "-c", "import argparse\n\n# Parse the arguments\n_parser = argparse.ArgumentParser(prog=\"Example
          Component\", description=\"\")\n_parser.add_argument(\"--message\", dest=\"message\",
          type=str, required=True)\n_parsed_args = vars(_parser.parse_args())\n\n#
          Print the message\nprint(_parsed_args[\"message\"])\n"], "image": "python:3.10"}},
          "inputs": [{"description": "a message to print to the console", "name":
          "message", "type": "String"}], "name": "Example Component"}', pipelines.kubeflow.org/component_ref: '{"digest":
          "c0ef046e1f6c7a9cbcd80254797e1ef68d0f019f3aa13fc5978eb599d2a41372", "url":
          "example_component.yaml"}', pipelines.kubeflow.org/arguments.parameters: '{"message":
          "current_utc_epoch: {{inputs.parameters.step-0-func-utc_epoch}}\nday_of_week:
          {{inputs.parameters.step-0-func-day_of_week}}\ncustom_message: {{inputs.parameters.input_text}}"}'}
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.8.22
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
  - name: pipeline-1
    inputs:
      parameters:
      - {name: input_text}
    dag:
      tasks:
      - name: example-component
        template: example-component
        dependencies: [step-0-func]
        arguments:
          parameters:
          - {name: input_text, value: '{{inputs.parameters.input_text}}'}
          - {name: step-0-func-day_of_week, value: '{{tasks.step-0-func.outputs.parameters.step-0-func-day_of_week}}'}
          - {name: step-0-func-utc_epoch, value: '{{tasks.step-0-func.outputs.parameters.step-0-func-utc_epoch}}'}
      - {name: step-0-func, template: step-0-func}
      - name: step-1-func
        template: step-1-func
        dependencies: [step-0-func]
        arguments:
          parameters:
          - {name: input_text, value: '{{inputs.parameters.input_text}}'}
          - {name: step-0-func-day_of_week, value: '{{tasks.step-0-func.outputs.parameters.step-0-func-day_of_week}}'}
          - {name: step-0-func-utc_epoch, value: '{{tasks.step-0-func.outputs.parameters.step-0-func-utc_epoch}}'}
  - name: step-0-func
    container:
      args: ['----output-paths', /tmp/outputs/utc_epoch/data, /tmp/outputs/day_of_week/data]
      command:
      - sh
      - -ec
      - |
        program_path=$(mktemp)
        printf "%s" "$0" > "$program_path"
        python3 -u "$program_path" "$@"
      - |
        def step_0__func():
            import datetime
            from collections import namedtuple

            # get the current time
            now_utc = datetime.datetime.utcnow()
            utc_epoch = int(now_utc.timestamp())
            day_of_week = now_utc.strftime("%A")

            # return namedtuple() with KFP component outputs
            # https://www.kubeflow.org/docs/components/pipelines/v1/sdk/python-function-components/#building-python-function-based-components
            step_outputs = namedtuple("Outputs", ["utc_epoch", "day_of_week"])
            return step_outputs(utc_epoch=utc_epoch, day_of_week=day_of_week)

        def _serialize_int(int_value: int) -> str:
            if isinstance(int_value, str):
                return int_value
            if not isinstance(int_value, int):
                raise TypeError('Value "{}" has type "{}" instead of int.'.format(
                    str(int_value), str(type(int_value))))
            return str(int_value)

        def _serialize_str(str_value: str) -> str:
            if not isinstance(str_value, str):
                raise TypeError('Value "{}" has type "{}" instead of str.'.format(
                    str(str_value), str(type(str_value))))
            return str_value

        import argparse
        _parser = argparse.ArgumentParser(prog='Step 0 func', description='')
        _parser.add_argument("----output-paths", dest="_output_paths", type=str, nargs=2)
        _parsed_args = vars(_parser.parse_args())
        _output_files = _parsed_args.pop("_output_paths", [])

        _outputs = step_0__func(**_parsed_args)

        _output_serializers = [
            _serialize_int,
            _serialize_str,

        ]

        import os
        for idx, output_file in enumerate(_output_files):
            try:
                os.makedirs(os.path.dirname(output_file))
            except OSError:
                pass
            with open(output_file, 'w') as f:
                f.write(_output_serializers[idx](_outputs[idx]))
      image: python:3.11
    outputs:
      parameters:
      - name: step-0-func-day_of_week
        valueFrom: {path: /tmp/outputs/day_of_week/data}
      - name: step-0-func-utc_epoch
        valueFrom: {path: /tmp/outputs/utc_epoch/data}
      artifacts:
      - {name: step-0-func-day_of_week, path: /tmp/outputs/day_of_week/data}
      - {name: step-0-func-utc_epoch, path: /tmp/outputs/utc_epoch/data}
    metadata:
      annotations: {pipelines.kubeflow.org/task_display_name: 'STEP 0: Get Current
          Date', pipelines.kubeflow.org/component_spec: '{"implementation": {"container":
          {"args": ["----output-paths", {"outputPath": "utc_epoch"}, {"outputPath":
          "day_of_week"}], "command": ["sh", "-ec", "program_path=$(mktemp)\nprintf
          \"%s\" \"$0\" > \"$program_path\"\npython3 -u \"$program_path\" \"$@\"\n",
          "def step_0__func():\n    import datetime\n    from collections import namedtuple\n\n    #
          get the current time\n    now_utc = datetime.datetime.utcnow()\n    utc_epoch
          = int(now_utc.timestamp())\n    day_of_week = now_utc.strftime(\"%A\")\n\n    #
          return namedtuple() with KFP component outputs\n    # https://www.kubeflow.org/docs/components/pipelines/v1/sdk/python-function-components/#building-python-function-based-components\n    step_outputs
          = namedtuple(\"Outputs\", [\"utc_epoch\", \"day_of_week\"])\n    return
          step_outputs(utc_epoch=utc_epoch, day_of_week=day_of_week)\n\ndef _serialize_int(int_value:
          int) -> str:\n    if isinstance(int_value, str):\n        return int_value\n    if
          not isinstance(int_value, int):\n        raise TypeError(''Value \"{}\"
          has type \"{}\" instead of int.''.format(\n            str(int_value), str(type(int_value))))\n    return
          str(int_value)\n\ndef _serialize_str(str_value: str) -> str:\n    if not
          isinstance(str_value, str):\n        raise TypeError(''Value \"{}\" has
          type \"{}\" instead of str.''.format(\n            str(str_value), str(type(str_value))))\n    return
          str_value\n\nimport argparse\n_parser = argparse.ArgumentParser(prog=''Step
          0 func'', description='''')\n_parser.add_argument(\"----output-paths\",
          dest=\"_output_paths\", type=str, nargs=2)\n_parsed_args = vars(_parser.parse_args())\n_output_files
          = _parsed_args.pop(\"_output_paths\", [])\n\n_outputs = step_0__func(**_parsed_args)\n\n_output_serializers
          = [\n    _serialize_int,\n    _serialize_str,\n\n]\n\nimport os\nfor idx,
          output_file in enumerate(_output_files):\n    try:\n        os.makedirs(os.path.dirname(output_file))\n    except
          OSError:\n        pass\n    with open(output_file, ''w'') as f:\n        f.write(_output_serializers[idx](_outputs[idx]))\n"],
          "image": "python:3.11"}}, "name": "Step 0 func", "outputs": [{"name": "utc_epoch",
          "type": "Integer"}, {"name": "day_of_week", "type": "String"}]}', pipelines.kubeflow.org/component_ref: '{}',
        pipelines.kubeflow.org/max_cache_staleness: P0D}
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.8.22
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "false"
  - name: step-1-func
    container:
      args: [--message, /tmp/inputs/message/data]
      command:
      - sh
      - -ec
      - |
        program_path=$(mktemp)
        printf "%s" "$0" > "$program_path"
        python3 -u "$program_path" "$@"
      - |
        def step_1__func(message):
            print(message)

        import argparse
        _parser = argparse.ArgumentParser(prog='Step 1 func', description='')
        _parser.add_argument("--message", dest="message", type=str, required=True, default=argparse.SUPPRESS)
        _parsed_args = vars(_parser.parse_args())

        _outputs = step_1__func(**_parsed_args)
      image: python:3.10
    inputs:
      parameters:
      - {name: input_text}
      - {name: step-0-func-day_of_week}
      - {name: step-0-func-utc_epoch}
      artifacts:
      - name: message
        path: /tmp/inputs/message/data
        raw:
          data: |-
            current_utc_epoch: {{inputs.parameters.step-0-func-utc_epoch}}
            day_of_week: {{inputs.parameters.step-0-func-day_of_week}}
            custom_message: {{inputs.parameters.input_text}}
    metadata:
      annotations: {pipelines.kubeflow.org/task_display_name: 'STEP 1: Print Message
          (Python Function Component)', pipelines.kubeflow.org/component_spec: '{"implementation":
          {"container": {"args": ["--message", {"inputPath": "message"}], "command":
          ["sh", "-ec", "program_path=$(mktemp)\nprintf \"%s\" \"$0\" > \"$program_path\"\npython3
          -u \"$program_path\" \"$@\"\n", "def step_1__func(message):\n    print(message)\n\nimport
          argparse\n_parser = argparse.ArgumentParser(prog=''Step 1 func'', description='''')\n_parser.add_argument(\"--message\",
          dest=\"message\", type=str, required=True, default=argparse.SUPPRESS)\n_parsed_args
          = vars(_parser.parse_args())\n\n_outputs = step_1__func(**_parsed_args)\n"],
          "image": "python:3.10"}}, "inputs": [{"name": "message", "type": "String"}],
          "name": "Step 1 func"}', pipelines.kubeflow.org/component_ref: '{}'}
      labels:
        pipelines.kubeflow.org/kfp_sdk_version: 1.8.22
        pipelines.kubeflow.org/pipeline-sdk-type: kfp
        pipelines.kubeflow.org/enable_caching: "true"
  arguments:
    parameters:
    - {name: input_text}
  serviceAccountName: pipeline-runner
